version: "3.3"

services:

  api:
    image: ghcr.io/battmoteam/battmoapp_api:latest
    build:
      context: ./api
      dockerfile: Dockerfile
      target: prod
    container_name: api
    restart: always
    ports:
      - "8081:8081"
      - "8080:8080"
    command: julia --project=. -e 'include("api.jl")' --color=yes --depwarn=no --project=@. --sysimage="pre-compilation/sysimage.so" -q -i -- $$(dirname $$0)/../bootstrap.jl -s=true "$$@"

  nginx:
    image: ghcr.io/battmoteam/battmoapp_nginx:latest
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /usr/share/nginx/html/.well-known:/usr/share/nginx/html/.well-known
    command: nginx -g 'daemon off;'

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /usr/share/nginx/html/.well-known:/usr/share/nginx/html/.well-known
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew --webroot -w /usr/share/nginx/html --quiet; sleep 12h; done"
 
  gui:
    image: ghcr.io/battmoteam/battmoapp_gui:latest
    build: ./gui
    container_name: gui
    restart: always
    ports:
      - "8501:8501"
    command: streamlit run app.py --global.disableWidgetStateDuplicationWarning true --server.port=8501

  umami:
    image: docker.umami.is/umami-software/umami:postgresql-latest
    container_name: umami
    restart: always
    environment:
      DATABASE_URL: postgres://umami:password@umami-db/umami
      DATABASE_TYPE: postgres
      HASH_SALT: your_hash_salt  # Replace this with a secure, random hash salt
    ports:
      - "3000:3000"
    depends_on:
      - umami-db

  umami-db:
    image: postgres:13
    container_name: umami-db
    restart: always
    environment:
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: password  # Replace with a strong password
      POSTGRES_DB: umami
    volumes:
      - umami_db_data:/var/lib/postgresql/data

# Define volumes at the root level, outside of services
volumes:
  umami_db_data:
